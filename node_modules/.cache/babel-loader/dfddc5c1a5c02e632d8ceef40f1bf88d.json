{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/Downloads/mini-project-master/mini-project-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/ASUS/Downloads/mini-project-master/mini-project-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Downloads/mini-project-master/mini-project-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\mini-project-master\\\\mini-project-master\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport { trackStream } from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport progressEventReducer from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nvar fetchProgressDecorator = function fetchProgressDecorator(total, fn) {\n  var lengthComputable = total != null;\n  return function (loaded) {\n    return setTimeout(function () {\n      return fn({\n        lengthComputable: lengthComputable,\n        total: total,\n        loaded: loaded\n      });\n    });\n  };\n};\n\nvar isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nvar isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function'; // used only inside the fetch adapter\n\nvar encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? function (encoder) {\n  return function (str) {\n    return encoder.encode(str);\n  };\n}(new TextEncoder()) : /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(str) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = Uint8Array;\n            _context.next = 3;\n            return new Response(str).arrayBuffer();\n\n          case 3:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nvar supportsRequestStream = isReadableStreamSupported && function () {\n  var duplexAccessed = false;\n  var hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    }\n\n  }).headers.has('Content-Type');\n  return duplexAccessed && !hasContentType;\n}();\n\nvar DEFAULT_CHUNK_SIZE = 64 * 1024;\nvar supportsResponseStream = isReadableStreamSupported && !!function () {\n  try {\n    return utils.isReadableStream(new Response('').body);\n  } catch (err) {// return undefined\n  }\n}();\nvar resolvers = {\n  stream: supportsResponseStream && function (res) {\n    return res.body;\n  }\n};\nisFetchSupported && function (res) {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(function (type) {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? function (res) {\n      return res[type]();\n    } : function (_, config) {\n      throw new AxiosError(\"Response type '\".concat(type, \"' is not supported\"), AxiosError.ERR_NOT_SUPPORT, config);\n    });\n  });\n}(new Response());\n\nvar getBodyLength = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(body) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(body == null)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 0);\n\n          case 2:\n            if (!utils.isBlob(body)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", body.size);\n\n          case 4:\n            if (!utils.isSpecCompliantForm(body)) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 7;\n            return new Request(body).arrayBuffer();\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent.byteLength);\n\n          case 8:\n            if (!utils.isArrayBufferView(body)) {\n              _context2.next = 10;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", body.byteLength);\n\n          case 10:\n            if (utils.isURLSearchParams(body)) {\n              body = body + '';\n            }\n\n            if (!utils.isString(body)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 14;\n            return encodeText(body);\n\n          case 14:\n            return _context2.abrupt(\"return\", _context2.sent.byteLength);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getBodyLength(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar resolveBodyLength = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(headers, body) {\n    var length;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            length = utils.toFiniteNumber(headers.getContentLength());\n            return _context3.abrupt(\"return\", length == null ? getBodyLength(body) : length);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function resolveBodyLength(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default isFetchSupported && /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(config) {\n    var _resolveConfig, url, method, data, signal, cancelToken, timeout, onDownloadProgress, onUploadProgress, responseType, headers, _resolveConfig$withCr, withCredentials, fetchOptions, _ref5, _ref6, composedSignal, stopTimeout, finished, request, onFinish, requestContentLength, _request, contentTypeHeader, response, isStreamResponse, options, responseContentLength, responseData;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _resolveConfig = resolveConfig(config), url = _resolveConfig.url, method = _resolveConfig.method, data = _resolveConfig.data, signal = _resolveConfig.signal, cancelToken = _resolveConfig.cancelToken, timeout = _resolveConfig.timeout, onDownloadProgress = _resolveConfig.onDownloadProgress, onUploadProgress = _resolveConfig.onUploadProgress, responseType = _resolveConfig.responseType, headers = _resolveConfig.headers, _resolveConfig$withCr = _resolveConfig.withCredentials, withCredentials = _resolveConfig$withCr === void 0 ? 'same-origin' : _resolveConfig$withCr, fetchOptions = _resolveConfig.fetchOptions;\n            responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n            _ref5 = signal || cancelToken || timeout ? composeSignals([signal, cancelToken], timeout) : [], _ref6 = _slicedToArray(_ref5, 2), composedSignal = _ref6[0], stopTimeout = _ref6[1];\n\n            onFinish = function onFinish() {\n              !finished && setTimeout(function () {\n                composedSignal && composedSignal.unsubscribe();\n              });\n              finished = true;\n            };\n\n            _context4.prev = 4;\n            _context4.t0 = onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head';\n\n            if (!_context4.t0) {\n              _context4.next = 11;\n              break;\n            }\n\n            _context4.next = 9;\n            return resolveBodyLength(headers, data);\n\n          case 9:\n            _context4.t1 = requestContentLength = _context4.sent;\n            _context4.t0 = _context4.t1 !== 0;\n\n          case 11:\n            if (!_context4.t0) {\n              _context4.next = 15;\n              break;\n            }\n\n            _request = new Request(url, {\n              method: 'POST',\n              body: data,\n              duplex: \"half\"\n            });\n\n            if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n              headers.setContentType(contentTypeHeader);\n            }\n\n            if (_request.body) {\n              data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(requestContentLength, progressEventReducer(onUploadProgress)), null, encodeText);\n            }\n\n          case 15:\n            if (!utils.isString(withCredentials)) {\n              withCredentials = withCredentials ? 'cors' : 'omit';\n            }\n\n            request = new Request(url, _objectSpread(_objectSpread({}, fetchOptions), {}, {\n              signal: composedSignal,\n              method: method.toUpperCase(),\n              headers: headers.normalize().toJSON(),\n              body: data,\n              duplex: \"half\",\n              withCredentials: withCredentials\n            }));\n            _context4.next = 19;\n            return fetch(request);\n\n          case 19:\n            response = _context4.sent;\n            isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n            if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n              options = {};\n              ['status', 'statusText', 'headers'].forEach(function (prop) {\n                options[prop] = response[prop];\n              });\n              responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n              response = new Response(trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(responseContentLength, progressEventReducer(onDownloadProgress, true)), isStreamResponse && onFinish, encodeText), options);\n            }\n\n            responseType = responseType || 'text';\n            _context4.next = 25;\n            return resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n          case 25:\n            responseData = _context4.sent;\n            !isStreamResponse && onFinish();\n            stopTimeout && stopTimeout();\n            _context4.next = 30;\n            return new Promise(function (resolve, reject) {\n              settle(resolve, reject, {\n                data: responseData,\n                headers: AxiosHeaders.from(response.headers),\n                status: response.status,\n                statusText: response.statusText,\n                config: config,\n                request: request\n              });\n            });\n\n          case 30:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 33:\n            _context4.prev = 33;\n            _context4.t2 = _context4[\"catch\"](4);\n            onFinish();\n\n            if (!(_context4.t2 && _context4.t2.name === 'TypeError' && /fetch/i.test(_context4.t2.message))) {\n              _context4.next = 38;\n              break;\n            }\n\n            throw Object.assign(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request), {\n              cause: _context4.t2.cause || _context4.t2\n            });\n\n          case 38:\n            throw AxiosError.from(_context4.t2, _context4.t2 && _context4.t2.code, config, request);\n\n          case 39:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 33]]);\n  }));\n\n  return function (_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/mini-project-master/mini-project-master/node_modules/axios/lib/adapters/fetch.js"],"names":["platform","utils","AxiosError","composeSignals","trackStream","AxiosHeaders","progressEventReducer","resolveConfig","settle","fetchProgressDecorator","total","fn","lengthComputable","loaded","setTimeout","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","ReadableStream","encodeText","TextEncoder","encoder","str","encode","Uint8Array","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","origin","body","method","duplex","headers","has","DEFAULT_CHUNK_SIZE","supportsResponseStream","isReadableStream","err","resolvers","stream","res","forEach","type","isFunction","_","config","ERR_NOT_SUPPORT","getBodyLength","isBlob","size","isSpecCompliantForm","byteLength","isArrayBufferView","isURLSearchParams","isString","resolveBodyLength","length","toFiniteNumber","getContentLength","url","data","signal","cancelToken","timeout","onDownloadProgress","onUploadProgress","responseType","withCredentials","fetchOptions","toLowerCase","composedSignal","stopTimeout","onFinish","finished","unsubscribe","requestContentLength","_request","isFormData","contentTypeHeader","get","setContentType","request","toUpperCase","normalize","toJSON","response","isStreamResponse","options","prop","responseContentLength","findKey","responseData","Promise","resolve","reject","from","status","statusText","name","test","message","Object","assign","ERR_NETWORK","cause","code"],"mappings":"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","sourcesContent":["import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport progressEventReducer from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst fetchProgressDecorator = (total, fn) => {\n  const lengthComputable = total != null;\n  return (loaded) => setTimeout(() => fn({\n    lengthComputable,\n    total,\n    loaded\n  }));\n}\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst supportsRequestStream = isReadableStreamSupported && (() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n})();\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported && !!(()=> {\n  try {\n    return utils.isReadableStream(new Response('').body);\n  } catch(err) {\n    // return undefined\n  }\n})();\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    composeSignals([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  }\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(\n          requestContentLength,\n          progressEventReducer(onUploadProgress)\n        ), null, encodeText);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'cors' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(\n          responseContentLength,\n          progressEventReducer(onDownloadProgress, true)\n        ), isStreamResponse && onFinish, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n"]},"metadata":{},"sourceType":"module"}